name: test

on:
  push:
    branches:
      - master
      - '*.x'
    tags:
      - '*'
  pull_request:
  schedule:
    # Weekly Monday 7AM build
    - cron: "0 7 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CODECOV: $(codecov)

jobs:
  test_c:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        build_type: [ Debug, RelWithDebInfo, Release ]
    name: test (C, ${{ matrix.build_type }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          fetch-depth: 0
      # Do not reformat! Commands executed in BASH and CMD.exe. We cannot make them pretty.
      - run: cmake -S . -B ./build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING=ON -DENABLE_ASAN=ON
      - run: cmake --build ./build --config ${{ matrix.build_type }}
      - run: ctest --output-on-failure --test-dir build

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-13
          - macos-latest
          - windows-latest
        python:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        numpy:
          - '1.*'
          - '2.*'
        exclude:
          - python: '3.13'
            numpy: '1.*'
    name: test (Python ${{ matrix.python }}, numpy ${{ matrix.numpy }}, ${{ matrix.os }})
    needs: [test_c]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          fetch-depth: 0
      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: pyproject.toml
      - run: pip install -e ".[test]"
      - run: pip install "numpy==${{ matrix.numpy }}"
      - run: pip freeze
      - run: pytest -vvv -rs

  test_with_coverage:
    name: run tests with coverage
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          fetch-depth: 0
      - uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: pyproject.toml
      - run: pip install -e ".[test]"
      - run: pip freeze
      - run: pytest -vvv -rsv --cov=./ --cov-report=xml --cov-report term-missing
      - uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3  # v5.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

  test_downstream:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      envs: |
        - linux: jwst
        - linux: tweakwcs
